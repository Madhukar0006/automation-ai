### Add Event UUID, Organization-ID, Sensor-ID
if !exists(.uuid) { .uuid = uuid_v4() }
if !exists(.organization.id) { .organization.id = get_env_var("ORG_CODE") ?? "d3b6842a" }
if !exists(.sensor.id) { .sensor.id = get_env_var("SENSOR_ID") ?? "GD_VR_S01" }

.observer.type = "webserver"
.observer.vendor = "microsoft"
.observer.product = "iis"
.enrich.geoip = "true"
.enrich.iana = "true"
.log.schema = "raw"
.log.format = "json"

if .log.schema == "raw" { 
  if exists(.message) && is_json(string!(.message)) {
    if match(string!(.message), r'filebeat|winlogbeat') {
      parsed, err = parse_json(string!(.message))
      if err == null {
        . = merge(., object!(parsed))
      }
    }
  }
}


### Add "event.original" field
if exists(.message) && is_json(string!(.message)) {
  .event.original = del(.message)
  parsed, err = parse_json(string!(.event.original))
  if err == null {
    .event_data = object!(parsed)
  }
} else if is_string(.message) {
    .event.original = del(.message)
    .event_data = .event.original
} else if !exists(.message) {
    parsed = object(.); del(.); .event = {}
    .event.original = encode_json(parsed)
    .event_data = parsed
}

###### Parser start ############
 .relate.ip = []
 .related.hosts = []
 .related.user = []
 . |= parse_groks!(string!(.event.original),
  patterns: [
        "%{TIMESTAMP_ISO8601:iis.access.time} (?:-|%{IPORHOST:destination.address}) (?:-|%{WORD:http.request.method}) (?:-|%{NOTSPACE:_temp_.url_path}) (?:-|%{NOTSPACE:_temp_.url_query}) (?:-|%{NUMBER:destination.port}) (?:-|%{NOTSPACE:user.name}) (?:-|%{IPORHOST:source.address}) (?:-|%{NOTSPACE:user_agent.original}) (?:-|%{NOTSPACE:http.request.referrer}) (?:-|%{NUMBER:http.response.status_code}) (?:-|%{NUMBER:iis.access.sub_status}) (?:-|%{NUMBER:iis.access.win32_status}) (?:-|%{NUMBER:_temp_.duration})( (?:-|%{IP:network.forwarded_ip}))?.*",
      "%{TIMESTAMP_ISO8601:iis.access.time} (?:-|%{NOTSPACE:iis.access.site_name}) (?:-|%{WORD:http.request.method}) (?:-|%{NOTSPACE:_temp_.url_path}) (?:-|%{NOTSPACE:_temp_.url_query}) (?:-|%{NUMBER:destination.port}) (?:-|%{NOTSPACE:user.name}) (?:-|%{IPORHOST:source.address}) (?:-|%{NOTSPACE:user_agent.original}) (?:-|%{NOTSPACE:iis.access.cookie}) (?:-|%{NOTSPACE:http.request.referrer}) (?:-|%{NOTSPACE:destination.domain}) (?:-|%{NUMBER:http.response.status_code}) (?:-|%{NUMBER:iis.access.sub_status}) (?:-|%{NUMBER:iis.access.win32_status}) (?:-|%{NUMBER:http.response.body.bytes}) (?:-|%{NUMBER:http.request.body.bytes}) (?:-|%{NUMBER:_temp_.duration})( (?:-|%{IP:network.forwarded_ip}))?.*",
      "%{TIMESTAMP_ISO8601:iis.access.time} (?:-|%{NOTSPACE:iis.access.site_name}) (?:-|%{IPORHOST:destination.address}) (?:-|%{WORD:http.request.method}) (?:-|%{NOTSPACE:_temp_.url_path}) (?:-|%{NOTSPACE:_temp_.url_query}) (?:-|%{NUMBER:destination.port}) (?:-|%{NOTSPACE:user.name}) (?:-|%{IPORHOST:source.address}) (?:-|HTTP/%{NUMBER:http.version}) (?:-|%{NOTSPACE:user_agent.original}) (?:-|%{NOTSPACE:iis.access.cookie}) (?:-|%{NOTSPACE:http.request.referrer}) (?:-|%{NUMBER:http.response.status_code}) (?:-|%{NUMBER:iis.access.sub_status}) (?:-|%{NUMBER:iis.access.win32_status}) (?:-|%{NUMBER:http.response.body.bytes}) (?:-|%{NUMBER:http.request.body.bytes}) (?:-|%{NUMBER:_temp_.duration})( (?:-|%{IP:network.forwarded_ip}))?.*",
      "%{TIMESTAMP_ISO8601:iis.access.time} (?:-|%{NOTSPACE:iis.access.site_name}) (?:-|%{NOTSPACE:iis.access.server_name}) (?:-|%{IPORHOST:destination.address}) (?:-|%{WORD:http.request.method}) (?:-|%{NOTSPACE:_temp_.url_path}) (?:-|%{NOTSPACE:_temp_.url_query}) (?:-|%{NUMBER:destination.port}) (?:-|%{NOTSPACE:user.name}) (?:-|%{IPORHOST:source.address}) (?:-|HTTP/%{NUMBER:http.version}) (?:-|%{NOTSPACE:user_agent.original}) (?:-|%{NOTSPACE:iis.access.cookie}) (?:-|%{NOTSPACE:http.request.referrer}) (?:-|%{NOTSPACE:destination.domain}) (?:-|%{NUMBER:http.response.status_code}) (?:-|%{NUMBER:iis.access.sub_status}) (?:-|%{NUMBER:iis.access.win32_status}) (?:-|%{NUMBER:http.response.body.bytes}) (?:-|%{NUMBER:http.request.body.bytes}) (?:-|%{NUMBER:_temp_.duration})( (?:-|%{IP:network.forwarded_ip}))?.*",
      "%{TIMESTAMP_ISO8601:iis.access.time} \[%{IPORHOST:destination.address}\]\(http://%{IPORHOST:destination_address}\) (?:-|%{WORD:http.request.method}) (?:-|%{NOTSPACE:_temp_.url_path}) (?:-|%{NOTSPACE:_temp_.url_query}) (?:-|%{NUMBER:destination.port}) (?:-|%{NOTSPACE:user.name}) \[%{IPORHOST:source.address}\]\(http://%{IPORHOST:source_address}\) (?:-|%{NOTSPACE:user_agent.original}) (?:-|%{NUMBER:http.response.status_code}) (?:-|%{NUMBER:iis.access.sub_status}) (?:-|%{NUMBER:iis.access.win32_status}) (?:-|%{NUMBER:_temp_.duration})( (?:-|%{IP:network.forwarded_ip}))?.*",
      "%{TIMESTAMP_ISO8601:iis.access.time} (?:-|%{IPORHOST:destination.address}) (?:-|%{WORD:http.request.method}) (?:-|%{NOTSPACE:_temp_.url_path}) (?:-|%{NOTSPACE:_temp_.url_query}) (?:-|%{NUMBER:destination.port}) (?:-|%{NOTSPACE:user.name}) (?:-|%{IPORHOST:source.address}) (?:-|%{NOTSPACE:user_agent.original}) (?:-|%{NUMBER:http.response.status_code}) (?:-|%{NUMBER:iis.access.sub_status}) (?:-|%{NUMBER:iis.access.win32_status}) (?:-|%{NUMBER:_temp_.duration})( (?:-|%{IP:network.forwarded_ip}))?.*",
      "%{TIMESTAMP_ISO8601:iis.access.time} (?:-|%{IPORHOST:destination.address}) (?:-|%{WORD:http.request.method}) (?:-|%{NOTSPACE:_temp_.url_path}) (?:-|%{NOTSPACE:_temp_.url_query}) (?:-|%{NUMBER:destination.port}) (?:-|%{NOTSPACE:user.name}) (?:-|%{IPORHOST:source.address}) (?:-|%{NOTSPACE:user_agent.original}) (?:-|%{NOTSPACE:iis.access.cookie}) (?:-|%{NOTSPACE:http.request.referrer}) (?:-|%{NUMBER:http.response.status_code}) (?:-|%{NUMBER:iis.access.sub_status}) (?:-|%{NUMBER:iis.access.win32_status}) (?:-|%{NUMBER:_temp_.duration})( (?:-|%{IP:network.forwarded_ip}))?.*",
      "%{TIMESTAMP_ISO8601:iis.access.time} (?:-|%{NOTSPACE:iis.access.server_name}) (?:-|%{IPORHOST:destination.address}) (?:-|%{WORD:http.request.method}) (?:-|%{NOTSPACE:_temp_.url_path}) (?:-|%{NOTSPACE:_temp_.url_query}) (?:-|%{NUMBER:destination.port}) (?:-|%{NOTSPACE:user.name}) (?:-|%{IPORHOST:source.address}) (?:-|%{NOTSPACE:user_agent.original}) (?:-|%{NOTSPACE:http.request.referrer}) (?:-|%{NUMBER:http.response.status_code}) (?:-|%{NUMBER:iis.access.sub_status}) (?:-|%{NUMBER:iis.access.win32_status}) (?:-|%{NUMBER:_temp_.duration})( (?:-|%{IP:network.forwarded_ip}))?.*",
      "%{TIMESTAMP.ISO8601:iis.access.time}\\s*%{IP:destination.address} (?<http.request.method>(GET|POST)) (?:-|%{NOTSPACE:_temp_.url_path}) (?:-|%{NOTSPACE:_temp_.url_query}) (?:-|%{NUMBER:destination.port}) (?:-|%{NOTSPACE:user.name}) %{DATA:source.address} (?:-|%{NOTSPACE:user_agent.original}) (?:-|%{NOTSPACE:http.request.referrer}) (?:-|%{NUMBER:http.response.status.code}) (?:-|%{NUMBER:iis.access.sub.status}) (?:-|%{NUMBER:iis.access.win32.status}) (?:-|%{NUMBER:_temp_.duration})( (?:-|%{IP:network.forwarded.ip}))?.*",
      "%{TIMESTAMP_ISO8601:iis.access.time}\\s*(%{HOSTNAME:iis.access.site_name}|)\\s*%{IP:destination.address} (?<http_request_method>(GET|POST)) (?:-|%{NOTSPACE:_temp_.url_path}) (?:-|%{NOTSPACE:_temp_.url_query}) (?:-|%{NUMBER:destination.port}) (?:-|%{NOTSPACE:user.name}) %{DATA:source.address} (?:-|%{NOTSPACE:user_agent.original}) (?:-|%{NOTSPACE:http.request.referrer}) (?:-|%{NUMBER:http.response.status.code}) (?:-|%{NUMBER:iis.access.sub.status}) (?:-|%{NUMBER:iis.access.win32.status}) (?:-|%{NUMBER:_temp.duration})( (?:-|%{IP:network.forwarded.ip}))?.*",
                "%{GREEDYDATA:unparsed_message}"
  ],
  
  aliases: {
      "IPV6": "((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%[^ ]+)?",
      "x1" :"%{GREEDYDATA}"

    }

)

if exists(.unparsed_message) {
  . |= parse_groks!(string!(.unparsed_message),
          patterns: ["%{TIMESTAMP_ISO8601:iis.access.time}\\s*(%{HOSTNAME:iis.access.site_name}|)\\s*%{IP:destination.address} (?<http.request.method>(GET|POST)) (?:-|%{NOTSPACE:_temp_.url_path}) (?:-|%{NOTSPACE:_temp_.url_query}) (?:-|%{NUMBER:destination.port}) (?:-|%{NOTSPACE:user.name}) %{DATA:source.address} (?:-|%{NOTSPACE:user_agent.original}) (?:-|%{NOTSPACE:http.request.referrer}) (?:-|%{NUMBER:http.response.status.code}) (?:-|%{NUMBER:iis.access.sub.status}) (?:-|%{NUMBER:iis.access.win32.status}) (?:-|%{NUMBER:_temp_.duration})( (?:-|%{IP:network.forwarded.ip}))?.*",
          "%{TIMESTAMP_ISO8601:time}\\s*(%{HOSTNAME:name}|)\\s*%{IP:destinationaddress} (?<http_request_method>(GET|POST)) (?:-|%{NOTSPACE:_temp_url_path}) (?:-|%{NOTSPACE:_temp_url_query}) (?:-|%{NUMBER:destinationport}) (?:-|%{NOTSPACE:username}) %{DATA:sourceaddress} (?:-|%{NOTSPACE:user_agentoriginal}) (?:-|%{NOTSPACE:httprequestreferrer}) (?:-|%{NUMBER:httpresponsestatuscode}) (?:-|%{NUMBER:iisaccessstatus}) (?:-|%{NUMBER:iisaccesswin32status}) (?:-|%{NUMBER:_temp_.duration})( (?:-|%{IP:network.forwarded.ip}))?.*",
          "%{GREEDYDATA:hj}"]
          )
}
del(.unparsed_message)


if exists(._temp_.url_path) {.url.path = del(._temp_.url_path)}
if exists(.url.path) {.url.original = .url.path}
if exists(._temp_.url_query) {.url.query = del(._temp_.url_query)}
if is_null(.url.query) {
  if exists(._temp_.url_query) {.url.query = del(._temp_.url_query)}
}
if exists(.url.query) && contains!(.url.query,"%20") {
  if exists(.url.query) { .url.query = replace!(.url.query,"%20"," ") }
  if exists(.url.query) { .url.query = replace!(.url.query,"%27","'") }
}
if exists(.url.query) && contains!(.url.query,"%27") {
  if exists(.url.query) { .url.query = replace!(.url.query,"%27","'") }
}
if !is_nullish(.destination.domain) && is_nullish(.url.domain) {
  if exists(.destination.domain) {.url.domain = (.destination.domain)}
}
if exists(.destination.address) {.destination.ip = (.destination.address)}
if exists(.source.address) {.source.ip = (.source.address)}
.source.ip=replace_with(to_string!(.source.ip),r'%[a-zA-Z0-9]*')->|match|{""}
.destination.ip=replace_with(to_string!(.destination.ip),r'%[a-zA-Z0-9]*')->|match|{""}
.source.address=replace_with(to_string!(.source.address),r'%[a-zA-Z0-9]*')->|match|{""}
.destination.address=replace_with(to_string!(.destination.address),r'%[a-zA-Z0-9]*')->|match|{""}
.event.kind = "event"
.event.category = []
.event.category = push(.event.category,"web")
if !is_null(.source.ip) && !is_null(.destination.ip) {
  .event.category = push(.event.category,"network")
  .event.type = ["connection"]
}
if exists(.user.name){
  . |= parse_groks!( (.user.name), [
      "%{DATA:_tmp.user_leading_domain}\\\\%{DATA:user_name}@%{GREEDYDATA:user_domain}",
      "%{DATA:user_name}@%{GREEDYDATA:user_domain}",
      "%{DATA:user_domain}\\\\%{GREEDYDATA:user_name}",
      "%{GREEDYDATA:user_name}"
    ])
}
if exists(.user_name) {.user.name = del(.user_name)}
if exists(.user_domain) {.user.domain = del(.user_domain)}
if exists(.iis.access.server_name) {.host.name = downcase!(.iis.access.server_name)}
if (!is_nullish(.http.response.status_code)) && (to_int!(.http.response.status_code) < 400) {
  .event.outcome = "success"
} else {
  .event.outcome = "failure"
}
if !is_nullish(._temp_.duration) {
  .ms = parse_float!(._temp_.duration)
  .event.duration = to_int(.ms * 1_000_000)
  del(.ms)
  del(._temp_duration)
}
if exists(.url.path) && !contains!(.url.path,"cmd"){
    . |= parse_groks!( (.url.path), [
        "%{DATA}\\.%{WORD:url_extension}.*",
        "%{GREEDYDATA}"
    ])
   
} else {
      . |= parse_groks!( (.url.path), [
          "%{GREEDYDATA}\\.%{WORD:url_extension}",
          "%{GREEDYDATA}"
      ])
  }
if exists(.url_extension) {.url.extension = del(.url_extension)}
if exists(.user_agent.original)  && !is_nullish(.user_agent.original){
  . |= parse_user_agent!(.user_agent.original)
    if exists(.browser.family) {.user_agent.name = del(.browser.family)}
    if exists(.browser.version) {.user_agent.version = del(.browser.version)}
     if exists(.user_agent.original) && contains!(.user_agent.original,"Windows") {
        if exists(.os.family)  {  
            . |= parse_groks!( (.os.family),[
                "%{WORD:os_name}\\s%{BASE16FLOAT:os_version}",
                "%{WORD:os_name}\\s%{GREEDYDATA:os_version}"
            ])
        }
        if exists(.os_name) {.user_agent.os.name = del(.os_name)}
        if exists(.os_version) {.user_agent.os.version = del(.os_version)}
        if exists(.os.family) {.user_agent.os.full = del(.os.family)}
      } else {
         .os.full = .os.family+" "+.os.version
         if exists(.os.version) {.user_agent.os.version = del(.os.version)}
         if exists(.os.family) {.user_agent.os.name = del(.os.family)}
         if exists(.os.full) {.user_agent.os.full = del(.os.full)}
        }
  del(.browser)
}
del(.event_data)
del(._temp_)
del(.device)
.event_data = del(.iis.access)
### Add event.created ###
if exists(.iis_access_time){ .cre= parse_timestamp!(del(.iis_access_time),format:"%F %T")
  .event.created=format_timestamp!(del(.cre), format: "%FT%T%.3fZ")
}

### Related fields ###
.related.ip = []
.related.user = []
.related.hosts = []
if exists(.destination.ip) && !is_nullish(.destination.ip) {
  .related.ip = push(.related.ip, .destination.ip)
}
if exists(.source.ip) && !is_nullish(.source.ip) {
  .related.ip = push(.related.ip, .source.ip)
}
if exists(.host.name) && !is_nullish(.host.name) {
  .related.hosts = push(.related.hosts, .host.name)
}
if exists(.user.name) && !is_nullish(.user.name) {
  .related.user = push(.related.user, .user.name)
}
if exists(.related.ip) {.related.ip = unique(.related.ip) }
if exists(.related.user) {.related.user = unique(.related.user) }
if exists(.related.hosts) {.related.hosts = unique(.related.hosts) }

#### Remove empty, null fields ,fields that are not required ####
. = compact(., string: true, array: true, null: true)

