# Vector Configuration for VRL Validation with Console Output
data_dir: ./data

# Enable more verbose logging
log_schema:
  host_key: "host"
  message_key: "message"
  timestamp_key: "timestamp"

sources:
  file_input:
    type: file
    include: ["vector_logs/test.log"]
    read_from: beginning
    # Show what's being read
    fingerprint:
      strategy: "device_and_inode"

transforms:
  vrl_parser:
    type: remap
    inputs: ["file_input"]
    # Load VRL from external file
    file: "parser.vrl"
    # Drop events that fail parsing if you want strict validation
    drop_on_error: false
    drop_on_abort: false
    # Enable to see errors
    reroute_dropped: true

sinks:
  # Console output to see validation results
  console_output:
    type: console
    inputs: ["vrl_parser"]
    encoding:
      codec: json
    # Show validation status
    buffer:
      type: memory
      max_events: 100

  # File output for persistence
  file_output:
    type: file
    inputs: ["vrl_parser"]
    path: "vector_output_new/processed-logs-%Y%m%d.json"
    encoding:
      codec: json
    # Show fields that were parsed
    buffer:
      type: memory
      max_events: 500